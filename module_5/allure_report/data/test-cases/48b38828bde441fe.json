{
  "uid" : "48b38828bde441fe",
  "name" : "test_guest_can_add_product_to_basket[7]",
  "fullName" : "module_5.test_product_page.TestProductPage#test_guest_can_add_product_to_basket",
  "historyId" : "8d0733f3d89071302d825909e84550d6",
  "time" : {
    "start" : 1625399970419,
    "stop" : 1625399973030,
    "duration" : 2611
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nAssertionError: Message with product in basket is not presented",
  "statusTrace" : "self = <module_5.test_product_page.TestProductPage object at 0x00000267A9727D30>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8e3227c7d1bc7433690d7bc0fc3e216e\")>, promo_offer = '7'\n\n    @pytest.mark.parametrize('promo_offer',\n                             [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", pytest.param(\"7\", marks=pytest.mark.xfail), \"8\", \"9\"])\n    def test_guest_can_add_product_to_basket(self, browser, promo_offer):\n        link = f\"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer{promo_offer}\"\n        page = ProductPage(browser,\n                           link)  # инициализируем Page Object, передаем в конструктор экземпляр драйвера и url адрес\n        page.open()  # открываем страницу\n        page.should_be_button_add_to_basket()  # проверяем что есть кнопка добавления в корзину\n        page.add_product_to_basket()  # жмем кнопку добавить в корзину\n        page.solve_quiz_and_get_code()  # обработка alert\n        page.should_be_product_price()  # проверяем что есть сообщение с нужным текстом\n>       page.should_be_product_in_basket()  # проверяем что есть сообщение с нужным текстом\n\nmodule_5\\test_product_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <module_5.pages.product_page.ProductPage object at 0x00000267A9720580>\n\n    def should_be_product_in_basket(self):\n>       assert self.browser.find_element(*ProductPageLocators.PRODUCT_NAME).text == self.browser.find_element(\n            *ProductPageLocators.PRODUCT_IN_BASKET).text, \"Message with product in basket is not presented\"\nE       AssertionError: Message with product in basket is not presented\n\nmodule_5\\pages\\product_page.py:24: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "browser",
    "time" : {
      "start" : 1625399969035,
      "stop" : 1625399970418,
      "duration" : 1383
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nAssertionError: Message with product in basket is not presented",
    "statusTrace" : "self = <module_5.test_product_page.TestProductPage object at 0x00000267A9727D30>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8e3227c7d1bc7433690d7bc0fc3e216e\")>, promo_offer = '7'\n\n    @pytest.mark.parametrize('promo_offer',\n                             [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", pytest.param(\"7\", marks=pytest.mark.xfail), \"8\", \"9\"])\n    def test_guest_can_add_product_to_basket(self, browser, promo_offer):\n        link = f\"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer{promo_offer}\"\n        page = ProductPage(browser,\n                           link)  # инициализируем Page Object, передаем в конструктор экземпляр драйвера и url адрес\n        page.open()  # открываем страницу\n        page.should_be_button_add_to_basket()  # проверяем что есть кнопка добавления в корзину\n        page.add_product_to_basket()  # жмем кнопку добавить в корзину\n        page.solve_quiz_and_get_code()  # обработка alert\n        page.should_be_product_price()  # проверяем что есть сообщение с нужным текстом\n>       page.should_be_product_in_basket()  # проверяем что есть сообщение с нужным текстом\n\nmodule_5\\test_product_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <module_5.pages.product_page.ProductPage object at 0x00000267A9720580>\n\n    def should_be_product_in_basket(self):\n>       assert self.browser.find_element(*ProductPageLocators.PRODUCT_NAME).text == self.browser.find_element(\n            *ProductPageLocators.PRODUCT_IN_BASKET).text, \"Message with product in basket is not presented\"\nE       AssertionError: Message with product in basket is not presented\n\nmodule_5\\pages\\product_page.py:24: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7b7a2d360dfd2517",
      "name" : "stdout",
      "source" : "7b7a2d360dfd2517.txt",
      "type" : "text/plain",
      "size" : 100
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1625399973156,
      "stop" : 1625399976880,
      "duration" : 3724
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "parentSuite",
    "value" : "module_5"
  }, {
    "name" : "suite",
    "value" : "test_product_page"
  }, {
    "name" : "subSuite",
    "value" : "TestProductPage"
  }, {
    "name" : "host",
    "value" : "DESKTOP-1GJHT4O"
  }, {
    "name" : "thread",
    "value" : "14224-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "module_5.test_product_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "promo_offer",
    "value" : "'7'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "48b38828bde441fe.json",
  "parameterValues" : [ "'7'" ]
}